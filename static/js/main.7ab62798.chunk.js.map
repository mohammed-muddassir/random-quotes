{"version":3,"sources":["components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","props","getQuote","bind","state","isLoading","quote","author","axios","get","then","res","setState","data","content","catch","err","console","log","id","style","width","color","fontFamily","fontSize","backgroundColor","padding","borderRadius","boxShadow","this","textAlign","className","display","flexDirection","lineSpacing","justifyContent","fontStyle","href","target","textDecoration","cursor","onClick","letterSpacing","outline","opacity","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAgFgBA,E,kDA7EZ,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,SAAS,EAAKA,SAASC,KAAd,gBACb,EAAKC,MAAM,CACTC,WAAU,EACVC,MAAM,GACNC,OAAO,IANO,E,4CAWpB,WAAW,IAAD,OACJC,IAAMC,IAAI,kCACZC,MAAK,SAACC,GACH,EAAKC,SAAS,CACZN,MAAMK,EAAIE,KAAKC,QACfP,OAAOI,EAAIE,KAAKN,YAGrBQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAKhB,WAAoB,IAAD,OAElBR,IAAMC,IAAI,kCACRC,MAAK,SAACC,GACH,EAAKC,SAAS,CACZN,MAAMK,EAAIE,KAAKC,QACfP,OAAOI,EAAIE,KAAKN,OAChBF,WAAU,OAGfU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,oBAOjB,WAGO,OACE,sBAAKG,GAAG,UAAR,UACA,sBAAKA,GAAG,YAAYC,MAAO,CAACC,MAAM,QAAQC,MAAM,QAAQC,WAAW,qBAAqBC,SAAS,UAAUC,gBAAgB,UAAUC,QAAQ,OAAOC,aAAa,MAAMC,UAAU,oEAAjL,UACKC,KAAKzB,MAAMC,UAAU,mBAAGe,MAAO,CAACU,UAAU,UAArB,0BAEtB,sBAAKC,UAAU,gBAAgBX,MAAO,CAACY,QAAQ,OAAOC,cAAc,UAApE,UACA,sBAAMd,GAAG,OAAOC,MAAO,CAACc,YAAY,OAApC,SAA6C,4BAAIL,KAAKzB,MAAME,UAC5D,qBAAKc,MAAO,CAACY,QAAQ,OAAOG,eAAe,YAA3C,SACE,oBAAGhB,GAAG,SAASC,MAAO,CAACe,eAAe,WAAWC,UAAU,UAA3D,gBAA0EP,KAAKzB,MAAMG,eAGzF,sBAAMa,MAAO,CAACY,QAAQ,OAAOC,cAAc,MAAME,eAAe,iBAAhE,UACE,8BAEA,mBAAGE,KAAI,sFAAiFR,KAAKzB,MAAME,MAA5F,kBAA2GuB,KAAKzB,MAAMG,QAAUwB,UAAU,iBAAiBZ,GAAG,cAAcmB,OAAO,OAAOlB,MAAO,CAACE,MAAM,QAAQiB,eAAe,OAAOb,QAAQ,OAAOD,gBAAgB,mBAAmBE,aAAa,MAAMa,OAAO,eAEzT,8BACA,wBAAQC,QAASZ,KAAK3B,SAAUiB,GAAG,YAAYC,MAAO,CAACK,gBAAgB,UAAUH,MAAM,UAAUI,QAAQ,OAAOH,WAAW,aAAaI,aAAa,MAAMH,SAAS,QAAQkB,cAAc,MAAMF,OAAO,UAAUG,QAAQ,QAAzN,+BAOF,qBAAKxB,GAAG,SAASC,MAAO,CAACU,UAAU,SAASP,WAAW,aAAvD,SACE,oBAAGH,MAAO,CAACsB,cAAc,OAAOE,QAAQ,OAAxC,gBAAmD,yD,GAxE9CC,aCSLC,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ab62798.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nclass Quote extends Component{\r\n    constructor(props){\r\n     super(props)\r\n     this.getQuote=this.getQuote.bind(this)\r\n      this.state={\r\n        isLoading:true,\r\n        quote:'',\r\n        author:''\r\n      }\r\n    }\r\n \r\n \r\n  getQuote(){\r\n        axios.get('https://api.quotable.io/random')\r\n     .then((res)=>{\r\n         this.setState({\r\n           quote:res.data.content,\r\n           author:res.data.author\r\n         })\r\n        })\r\n     .catch(err=>{\r\n       console.log(err)\r\n     })\r\n       \r\n };\r\n    \r\n   componentDidMount(){ \r\n     \r\n    axios.get('https://api.quotable.io/random')\r\n     .then((res)=>{\r\n         this.setState({\r\n           quote:res.data.content,\r\n           author:res.data.author,\r\n           isLoading:false\r\n         })\r\n        })\r\n     .catch(err=>{\r\n       console.log(err)\r\n     })\r\n   \r\n };\r\n   \r\n       \r\n     \r\n  render(){\r\n       \r\n    \r\n         return(\r\n           <div id=\"wrapper\">\r\n           <div id=\"quote-box\" style={{width:\"500px\",color:\"white\",fontFamily:\"Raleway,sans-serif\",fontSize:\"1.25rem\",backgroundColor:\"#362861\",padding:\"2rem\",borderRadius:\"5px\",boxShadow:\"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}>\r\n              { this.state.isLoading?<p style={{textAlign:\"center\"}}>Loading.....</p>:\r\n                \r\n               <div className=\"quote-content\" style={{display:\"flex\",flexDirection:\"column\"}}>\r\n               <cite id=\"text\" style={{lineSpacing:\"1px\"}} ><q>{this.state.quote}</q></cite>\r\n               <div style={{display:\"flex\",justifyContent:\"flex-end\"}}>\r\n                 <p id=\"author\" style={{justifyContent:\"flex-end\",fontStyle:\"italic\"}}>-  {this.state.author}</p>\r\n               </div>\r\n               </div>}\r\n             <div  style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\r\n               <div>\r\n               \r\n               <a href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${this.state.quote}\"%0a - ${this.state.author}`} className=\"fa fa-twitter \" id=\"tweet-quote\" target=\"_top\" style={{color:\"white\",textDecoration:\"none\",padding:\"10px\",backgroundColor:\"rgb(255 166 166)\",borderRadius:\"4px\",cursor:\"pointer\"}} ></a>\r\n             </div>\r\n               <div>\r\n               <button onClick={this.getQuote} id=\"new-quote\" style={{backgroundColor:\"#ffd8df\",color:\"#130c0c\",padding:\"10px\",fontFamily:\"sans-serif\",borderRadius:\"4px\",fontSize:\".8rem\",letterSpacing:\"1px\",cursor:\"pointer\",outline:\"none\"}}>NEW QUOTE</button>\r\n               </div>\r\n \r\n \r\n            </div>\r\n             \r\n           </div>\r\n             <div id=\"footer\" style={{textAlign:\"center\",fontFamily:\"system-ui\"}}>\r\n               <p style={{letterSpacing:\".5px\",opacity:\"0.6\"}}>by <cite>muddassir</cite></p>\r\n             </div>\r\n          </div>   \r\n         )\r\n    }\r\n }\r\n export default Quote;\r\n ","import './App.css';\nimport Quote from './components/Quote';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quote/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}